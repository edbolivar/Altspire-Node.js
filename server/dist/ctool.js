"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
require("reflect-metadata");
var inversify_1 = require("inversify");
var app_info_service_1 = require("./services/app-info.service");
var task_runner_1 = require("./tasks/task-runner");
var server_types_1 = require("./server.types");
var check_drives_1 = require("./tasks/check-drives");
var test_config_service_1 = require("./tasks/test-config-service");
var configuration_service_1 = require("./configuration/configuration-service");
var product_data_service_1 = require("./configuration/product-data-service");
// load everything needed to the container
var container = new inversify_1.Kernel();
container.bind("TaskRunner").to(task_runner_1.TaskRunner).inSingletonScope().whenTargetNamed("MyTaskRunner");
container.bind(server_types_1.default.AppInfo).to(app_info_service_1.AppInfoService).inSingletonScope();
container.bind(server_types_1.default.ConfigurationService).to(configuration_service_1.ConfigurationService).inSingletonScope();
container.bind(server_types_1.default.ProductDataService).to(product_data_service_1.ProductDataService).inSingletonScope();
// tasks (add your task here)
container.bind("ITask").to(check_drives_1.CheckDrives).inSingletonScope();
container.bind("ITask").to(test_config_service_1.TestConfigService).inSingletonScope();
var argv = require('minimist')(process.argv.slice(2));
var taskRunner = container.getNamed("TaskRunner", "MyTaskRunner");
taskRunner.execute(argv);

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImN0b29sLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEsNEJBQTBCO0FBRTFCLHVDQUFtQztBQUVuQyxnRUFBMkQ7QUFDM0QsbURBQXNEO0FBQ3RELCtDQUFtQztBQUNuQyxxREFBaUQ7QUFDakQsbUVBQThEO0FBQzlELCtFQUEyRTtBQUMzRSw2RUFBd0U7QUFFeEUsMENBQTBDO0FBQzFDLElBQU0sU0FBUyxHQUFHLElBQUksa0JBQU0sRUFBRSxDQUFDO0FBQy9CLFNBQVMsQ0FBQyxJQUFJLENBQWEsWUFBWSxDQUFDLENBQUMsRUFBRSxDQUFDLHdCQUFVLENBQUMsQ0FBQyxnQkFBZ0IsRUFBRSxDQUFDLGVBQWUsQ0FBQyxjQUFjLENBQUMsQ0FBQztBQUMzRyxTQUFTLENBQUMsSUFBSSxDQUFpQixzQkFBSyxDQUFDLE9BQU8sQ0FBQyxDQUFDLEVBQUUsQ0FBQyxpQ0FBYyxDQUFDLENBQUMsZ0JBQWdCLEVBQUUsQ0FBQztBQUNwRixTQUFTLENBQUMsSUFBSSxDQUF1QixzQkFBSyxDQUFDLG9CQUFvQixDQUFDLENBQUMsRUFBRSxDQUFDLDRDQUFvQixDQUFDLENBQUMsZ0JBQWdCLEVBQUUsQ0FBQztBQUM3RyxTQUFTLENBQUMsSUFBSSxDQUFxQixzQkFBSyxDQUFDLGtCQUFrQixDQUFDLENBQUMsRUFBRSxDQUFDLHlDQUFrQixDQUFDLENBQUMsZ0JBQWdCLEVBQUUsQ0FBQztBQUd2Ryw2QkFBNkI7QUFDN0IsU0FBUyxDQUFDLElBQUksQ0FBYyxPQUFPLENBQUMsQ0FBQyxFQUFFLENBQUMsMEJBQVcsQ0FBQyxDQUFDLGdCQUFnQixFQUFFLENBQUM7QUFFeEUsU0FBUyxDQUFDLElBQUksQ0FBb0IsT0FBTyxDQUFDLENBQUMsRUFBRSxDQUFDLHVDQUFpQixDQUFDLENBQUMsZ0JBQWdCLEVBQUUsQ0FBQztBQUVwRixJQUFJLElBQUksR0FBRyxPQUFPLENBQUMsVUFBVSxDQUFDLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUV0RCxJQUFJLFVBQVUsR0FBRyxTQUFTLENBQUMsUUFBUSxDQUFhLFlBQVksRUFBQyxjQUFjLENBQUMsQ0FBRTtBQUU5RSxVQUFVLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxDQUFFIiwiZmlsZSI6ImN0b29sLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICdyZWZsZWN0LW1ldGFkYXRhJztcbmltcG9ydCB7IGludGVyZmFjZXMsIENvbnRyb2xsZXIsIEludmVyc2lmeUV4cHJlc3NTZXJ2ZXIsIFRZUEUgfSBmcm9tICdpbnZlcnNpZnktZXhwcmVzcy11dGlscyc7XG5pbXBvcnQgeyBLZXJuZWwgfSBmcm9tICdpbnZlcnNpZnknO1xuaW1wb3J0ICogYXMgYm9keVBhcnNlciBmcm9tICdib2R5LXBhcnNlcic7XG5pbXBvcnQge0FwcEluZm9TZXJ2aWNlfSBmcm9tIFwiLi9zZXJ2aWNlcy9hcHAtaW5mby5zZXJ2aWNlXCI7XG5pbXBvcnQge0lUYXNrLCBUYXNrUnVubmVyfSBmcm9tIFwiLi90YXNrcy90YXNrLXJ1bm5lclwiO1xuaW1wb3J0IFRZUEVTIGZyb20gXCIuL3NlcnZlci50eXBlc1wiO1xuaW1wb3J0IHtDaGVja0RyaXZlc30gZnJvbSBcIi4vdGFza3MvY2hlY2stZHJpdmVzXCI7XG5pbXBvcnQge1Rlc3RDb25maWdTZXJ2aWNlfSBmcm9tIFwiLi90YXNrcy90ZXN0LWNvbmZpZy1zZXJ2aWNlXCI7XG5pbXBvcnQge0NvbmZpZ3VyYXRpb25TZXJ2aWNlfSBmcm9tIFwiLi9jb25maWd1cmF0aW9uL2NvbmZpZ3VyYXRpb24tc2VydmljZVwiO1xuaW1wb3J0IHtQcm9kdWN0RGF0YVNlcnZpY2V9IGZyb20gXCIuL2NvbmZpZ3VyYXRpb24vcHJvZHVjdC1kYXRhLXNlcnZpY2VcIjtcblxuLy8gbG9hZCBldmVyeXRoaW5nIG5lZWRlZCB0byB0aGUgY29udGFpbmVyXG5jb25zdCBjb250YWluZXIgPSBuZXcgS2VybmVsKCk7XG5jb250YWluZXIuYmluZDxUYXNrUnVubmVyPihcIlRhc2tSdW5uZXJcIikudG8oVGFza1J1bm5lcikuaW5TaW5nbGV0b25TY29wZSgpLndoZW5UYXJnZXROYW1lZChcIk15VGFza1J1bm5lclwiKTtcbmNvbnRhaW5lci5iaW5kPEFwcEluZm9TZXJ2aWNlPihUWVBFUy5BcHBJbmZvKS50byhBcHBJbmZvU2VydmljZSkuaW5TaW5nbGV0b25TY29wZSgpO1xuY29udGFpbmVyLmJpbmQ8Q29uZmlndXJhdGlvblNlcnZpY2U+KFRZUEVTLkNvbmZpZ3VyYXRpb25TZXJ2aWNlKS50byhDb25maWd1cmF0aW9uU2VydmljZSkuaW5TaW5nbGV0b25TY29wZSgpO1xuY29udGFpbmVyLmJpbmQ8UHJvZHVjdERhdGFTZXJ2aWNlPihUWVBFUy5Qcm9kdWN0RGF0YVNlcnZpY2UpLnRvKFByb2R1Y3REYXRhU2VydmljZSkuaW5TaW5nbGV0b25TY29wZSgpO1xuXG5cbi8vIHRhc2tzIChhZGQgeW91ciB0YXNrIGhlcmUpXG5jb250YWluZXIuYmluZDxDaGVja0RyaXZlcz4oXCJJVGFza1wiKS50byhDaGVja0RyaXZlcykuaW5TaW5nbGV0b25TY29wZSgpO1xuXG5jb250YWluZXIuYmluZDxUZXN0Q29uZmlnU2VydmljZT4oXCJJVGFza1wiKS50byhUZXN0Q29uZmlnU2VydmljZSkuaW5TaW5nbGV0b25TY29wZSgpO1xuXG52YXIgYXJndiA9IHJlcXVpcmUoJ21pbmltaXN0JykocHJvY2Vzcy5hcmd2LnNsaWNlKDIpKTtcblxubGV0IHRhc2tSdW5uZXIgPSBjb250YWluZXIuZ2V0TmFtZWQ8VGFza1J1bm5lcj4oXCJUYXNrUnVubmVyXCIsXCJNeVRhc2tSdW5uZXJcIikgO1xuXG50YXNrUnVubmVyLmV4ZWN1dGUoYXJndikgO1xuXG5cbiJdfQ==
